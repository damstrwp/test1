from aiogram import Router, F
from aiogram.filters import Command, or_f
from aiogram.types import Message, ReplyKeyboardRemove
from keyboards.inline import film_keyboard, start_keyboard, continue_keyboard
from keyboards.reply import keyboard
from aiogram.types import FSInputFile
from bd import dct
import random

command_router = Router()


@command_router.message(Command('start'))
async def handle_start(m: Message) -> None:
    photo = FSInputFile("img/Kinobot.jpg")
    await m.answer_photo(photo,
                         caption=f"–ü—Ä–∏–≤–µ—Ç,{m.from_user.username}! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º.",
                         reply_markup=start_keyboard)


@command_router.message(Command('about'))
async def handle_about(m: Message) -> None:
    about_message = "–≠—Ç–æ—Ç –±–æ—Ç –∏—â–µ—Ç —Ñ–∏–ª—å–º—ã –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥."
    photo = FSInputFile("img/about.jpg")
    await m.answer_photo(photo=photo, caption=about_message)


@command_router.message(or_f(Command('films'), F.text == "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º"))
async def handle_films(m: Message) -> None:
    films_message = "–î–∞–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–º –≤–∞–º —Ñ–∏–ª—å–º—ã! –í—ã–±–µ—Ä–µ—Ç–µ –∂–∞–Ω—Ä."
    await m.answer(text=films_message, reply_markup=film_keyboard)


@command_router.message(or_f(Command("randfilm"), F.text == "–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º"))
async def handle_randfilms(m: Message) -> None:
    bd = random.choice(list(dct.items()))
    photo = FSInputFile(bd[1][1])
    text = (f"<b><u>{bd[0]}</u></b>\n"
            f"<i>–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</i>\n"
            f"{bd[1][0]}")

    await m.answer_photo(photo, caption=text, parse_mode='HTML', reply_markup=continue_keyboard)


@command_router.message(or_f(Command('film'), F.text == "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤"))
async def handle_film(m: Message) -> None:
    film_message = f"–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ —è –Ω–∞–π–¥—É –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é  –ø—Ä–æ –Ω–µ–≥–æ."
    await m.answer(text=film_message)


@command_router.message(Command('menu'))
async def handle_menu(m: Message) -> None:
    await m.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö", reply_markup=keyboard)


@command_router.message(or_f(Command('help'), F.text == "–ü–æ–º–æ—â—å"))
async def handle_help(m: Message) -> None:
    help_message = (f"<b>–Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!</b> \n"
                    f"<i>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</i>\n"
                    f"/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã \n"
                    f"/help - –Ω–∞–≤–∏–≥–∞—Ü–∏—è \n"
                    f"/menu  - –º–µ–Ω—é \n"
                    f"/about - —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ —á–µ–º —ç—Ç–æ—Ç –±–æ—Ç \n"
                    f"<i>–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞:</i>\n"
                    f"/films - –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º \n"
                    f"/film - –ø–æ–∏—Å–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
                    f"/randfilm - –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º ")
    await m.answer(text=help_message, parse_mode="HTML", reply_markup=ReplyKeyboardRemove())


@command_router.message(F.text.lower().in_(["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "—Ö–∞–π"]))
async def handle_hi(m: Message):
    hello = [f"–ü—Ä–∏–≤–µ—Ç,{m.from_user.username}!‚ù§Ô∏è\n–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —Ñ–∏–ª—å–º–∞–º–∏?üé•",
             f"–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç,{m.from_user.username}!ü§ó\n–ò—â–µ—à—å –ø–æ–¥—Ö–¥—è—â–∏–π —Ñ–∏–ª—å–º?üçø"]
    await m.answer(text=hello[random.randint(0, len(hello) - 1)])


@command_router.message(F.text.lower().in_(["–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "–±–∞–π"]))
async def handle_bye(m: Message):
    byes = ["–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!üòå", "–ü–æ–∫–∞-–ø–æ–∫–∞!üòâ", "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üòä"]
    await m.answer(text=byes[random.randint(0, len(byes) - 1)])


@command_router.message()
async def echo_message(message: Message) -> None:
    try:
        await message.reply(text=message.text)
    except TypeError:
        await message.answer("Nice try!")
